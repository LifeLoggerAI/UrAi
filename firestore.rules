
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
<<<<<<< HEAD
    match /{doc=**} {
      allow read, write: if request.time < timestamp.date(2025, 9, 30);
=======

    // Helper function to check ownership
    function isOwner(uid) {
      return request.auth != null && request.auth.uid == uid;
    }

    // Users can read their own profile and update specific fields
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId); // Allows creating their own doc and updating
    }

    // Generic rule for user-owned content
    // This applies to collections like:
    // - memories
    // - dreams
    // - dreamEvents
    // - voiceEvents
    // - innerTexts
    // - people
    // - goals
    // - tasks
    // - calendarEvents
    // - habitWatch
    // - exportQueue
    // - exports (subcollection of users)
    match /{collection}/{docId} {
      allow read, write: if isOwner(resource.data.uid);
    }
    
    // Rule for subcollections under users, like exports
    match /users/{userId}/{collection}/{docId} {
        allow read, write: if isOwner(userId);
    }

    // Leads can be written by anyone, but not read or updated.
    match /leads/{leadId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    // Fallback: deny all other access
    match /{path=**} {
      allow read, write: if false;
>>>>>>> 5be23281 (Commit before pulling remote changes)
    }
  }
}
